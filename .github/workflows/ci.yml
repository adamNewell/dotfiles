name: Dotfiles CI/CD
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
jobs:
  shellcheck:
    name: Shell Script Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: ShellCheck for install script
        run: 'shellcheck -e SC1091 install.sh

          '
      - name: ShellCheck for template scripts
        run: 'find . -name "*.sh.tmpl" -type f -exec bash -c ''shellcheck -e SC1091,SC2016,SC2148 {} || true'' \;

          # Template files may have chezmoi template syntax that ShellCheck can''t fully parse

          '
  syntax-check:
    name: Syntax Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install bash and zsh
        run: 'sudo apt-get update

          sudo apt-get install -y bash zsh

          '
      - name: Validate install script
        run: 'bash -n install.sh

          '
      - name: Validate bash template scripts
        run: '# Basic syntax check for bash templates (may have template syntax)

          find . -name "*.sh.tmpl" -type f -exec bash -c ''bash -n {} 2>/dev/null || echo "Syntax check skipped for {} (contains templates)"'' \;

          '
      - name: Validate zsh scripts
        run: 'find . -name "*.zsh" -type f -exec zsh -n {} \;

          '
  chezmoi-validation:
    name: Chezmoi Validation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install chezmoi
        run: 'sh -c "$(curl -fsLS get.chezmoi.io)"

          '
      - name: Validate chezmoi configuration
        run: '# Initialize chezmoi with current repo (in CI mode to skip interactive steps)

          export CI=true

          ./bin/chezmoi init --apply .

          ./bin/chezmoi doctor

          '
      - name: Test chezmoi data parsing
        run: './bin/chezmoi data

          '
      - name: Validate template syntax
        run: '# Test basic template functionality

          ./bin/chezmoi execute-template < /dev/null || echo "Template validation completed"

          '
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run git-secrets
        run: 'git clone https://github.com/awslabs/git-secrets.git

          cd git-secrets && sudo make install

          cd ..

          git secrets --register-aws

          git secrets --scan

          '
      - name: Check for hardcoded credentials
        run: "# Check for common credential patterns (excluding documentation and test files)\n! grep -r -E \"(password|secret|key|token)\\s*=\\s*['\\\"][^'\\\"]+['\\\"]\" . \\\n  --exclude-dir=.git \\\n  --exclude-dir=git-secrets \\\n  --exclude-dir=docs \\\n  --exclude=\"*.md\" || {\n  echo \"Potential hardcoded credentials found\"\n  exit 1\n}\n"
      - name: Validate external download checksums
        run: "# Ensure all external downloads have checksums\nif [ -f \".chezmoiexternal.yaml\" ]; then\n  # Check if file has actual download definitions (not just comments)\n  if grep -qE '^\\s*\".*\":\\s*$' .chezmoiexternal.yaml; then\n    python3 -c \"\nimport yaml\nimport sys\n\nwith open('.chezmoiexternal.yaml', 'r') as f:\n    content = f.read()\n    # Skip template sections for validation\n    lines = [line for line in content.split('\\n') if not line.strip().startswith('{{') and not line.strip().startswith('#')]\n    yaml_content = '\\n'.join(lines)\n\ntry:\n    data = yaml.safe_load(yaml_content)\n    if data:\n        missing_checksums = []\n        for path, config in data.items():\n            if isinstance(config, dict) and 'url' in config:\n                if 'checksum' not in config:\n                    # Allow .local/bin/chezmoi to skip checksum (latest release)\n                    if path != '.local/bin/chezmoi':\n                        missing_checksums.append(path)\n        if missing_checksums:\n            print(f'WARNING: {', '.join(missing_checksums)} missing checksums')\n            sys.exit(1)\nexcept yaml.YAMLError as e:\n    print(f'YAML parsing error: {e}')\n    sys.exit(1)\n\"\n  else\n    echo \"No external downloads defined, skipping checksum validation\"\n  fi\nelse\n  echo \".chezmoiexternal.yaml not found, skipping checksum validation\"\nfi\n"
  documentation:
    name: Documentation Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check for required documentation
        run: "# Check for required files\nrequired_files=(\n  \"README.md\"\n  \"dot_config/zsh/README.md\"\n)\n\nfor file in \"${required_files[@]}\"; do\n  if [ ! -f \"$file\" ]; then\n    echo \"Missing required documentation: $file\"\n    exit 1\n  fi\ndone\n"
      - name: Validate markdown syntax
        uses: DavidAnson/markdownlint-cli2-action@v17
        with:
          globs: '**/*.md'
  integration-test:
    name: Integration Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Test package manager detection
        run: "# Test package manager detection (simplified test)\necho \"Testing package manager detection...\"\nif command -v apt-get >/dev/null 2>&1; then\n  echo \"✓ apt package manager detected\"\nelif command -v brew >/dev/null 2>&1; then\n  echo \"✓ brew package manager detected\"\nelif command -v dnf >/dev/null 2>&1; then\n  echo \"✓ dnf package manager detected\"\nelse\n  echo \"⚠ No supported package manager detected\"\nfi\n"
      - name: Test chezmoi template rendering
        run: "# Install chezmoi\nsh -c \"$(curl -fsLS get.chezmoi.io)\"\n\n# Test that templates can render platform-specific values\nexport CI=true\nif ./bin/chezmoi data | grep -q \"os\"; then\n  echo \"✓ Chezmoi data contains OS information\"\nelse\n  echo \"✗ Failed to get OS data from chezmoi\"\n  exit 1\nfi\n"
  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install chezmoi and dependencies
        run: 'sh -c "$(curl -fsLS get.chezmoi.io)"

          sudo apt-get update

          sudo apt-get install -y zsh

          '
  yaml-format:
    name: YAML Formatting Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install formatter deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install --user ruamel.yaml
      - name: Run YAML formatter in check mode
        run: |
          python ./bin/format_yaml.py --check
      - name: Install hyperfine
        run: 'wget https://github.com/sharkdp/hyperfine/releases/download/v1.18.0/hyperfine_1.18.0_amd64.deb

          sudo dpkg -i hyperfine_1.18.0_amd64.deb

          '
      - name: Benchmark chezmoi apply time
        run: "# Benchmark how long it takes to apply dotfiles (dry run)\nexport CI=true\nhyperfine --warmup 2 --min-runs 5 \\\n  \"./bin/chezmoi apply --dry-run --verbose .\" || echo \"Benchmark completed\"\n"
      - name: Benchmark template rendering
        run: "# Benchmark template execution performance\nif [ -f \"run_once_02-install-platform-packages.sh.tmpl\" ]; then\n  hyperfine --warmup 2 --min-runs 10 \\\n    \"./bin/chezmoi execute-template < run_once_02-install-platform-packages.sh.tmpl > /dev/null\" || echo \"Benchmark completed\"\nfi"
